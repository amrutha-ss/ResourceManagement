{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\nimport { Box, Button, Stack, ThemeProvider, createTheme } from '@mui/material';\nconst myTheme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(103, 79, 192)'\n    }\n  }\n});\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst columns = [{\n  accessorKey: 'id',\n  header: 'Id',\n  size: 100,\n  enableColumnFilter: false,\n  enableEditing: false,\n  enableSorting: false,\n  enableResizing: false\n}, {\n  accessorKey: 'emp_name',\n  header: 'Employee Name',\n  // size: 150,\n  enableResizing: true,\n  grow: true,\n  enableEditing: false,\n  enableColumnFilter: true\n}];\nmonthNames.forEach(month => {\n  columns.push({\n    header: month,\n    accessorKey: month.toLowerCase(),\n    editVariant: \"select\",\n    editSelectOptions: [\"Yes\", \"No\"],\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true,\n    enableResizing: false,\n    filterVariant: \"select\",\n    filterSelectOptions: [\"Yes\", \"No\"],\n    aggregationFn: 'sum',\n    Footer: () => /*#__PURE__*/React.createElement(Stack, null, \"Total:\")\n  });\n});\nconst FetchEmployee = ({\n  employeeRefetch,\n  setEmployeeRefetech\n}) => {\n  const [combinedData, setCombinedData] = useState([]);\n  const [changesMade, setChangesMade] = useState(false);\n  const [changedCellValues, setChangedCellValues] = useState([]);\n  useEffect(() => {\n    axios.get('api/fetchEmployeeBilling').then(response => {\n      const {\n        billing_data,\n        employee_data\n      } = response.data;\n      const mergedData = mergeData(billing_data, employee_data);\n      // console.log(mergedData)\n      setCombinedData(mergedData);\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n  const mergeData = (billingData, employeeData) => {\n    const employeeMap = {};\n    employeeData.forEach(employee => {\n      employeeMap[employee.id] = {\n        id: employee.id,\n        emp_name: employee.emp_name,\n        ...Object.fromEntries(monthNames.map(month => [month.toLowerCase(), '']))\n      };\n    });\n    billingData.forEach(billing => {\n      const {\n        emp_id,\n        month_name,\n        is_billable\n      } = billing;\n      if (employeeMap[emp_id]) {\n        employeeMap[emp_id][month_name] = is_billable ? \"Yes\" : \"No\";\n      }\n    });\n    return Object.values(employeeMap);\n  };\n  const handleCellValueChange = (emp_id, month_name, is_billable) => {\n    const existingIndex = changedCellValues.findIndex(item => item.emp_id === emp_id && item.month_name === month_name);\n    if (existingIndex !== -1) {\n      const newValues = [...changedCellValues];\n      newValues[existingIndex].is_billable = is_billable;\n      setChangedCellValues(newValues);\n    } else {\n      setChangedCellValues(prevValues => [...prevValues, {\n        emp_id,\n        month_name,\n        is_billable\n      }]);\n    }\n    setChangesMade(true);\n  };\n  const handleSave = () => {\n    changedCellValues.forEach(({\n      emp_id,\n      month_name,\n      is_billable\n    }) => {\n      const existingIndex = combinedData.findIndex(item => item.id == emp_id);\n      if (existingIndex !== -1) {\n        const employee = combinedData[existingIndex];\n        if (employee[month_name] !== '') {\n          axios.patch(\"api/editBillingInfo\", {\n            emp_id,\n            month_name,\n            is_billable\n          }).then(() => {\n            console.log(\"Edit Done\");\n          }).catch(() => {\n            console.log(\"Edit error\");\n          });\n        } else {\n          axios.post(\"api/createBilling\", {\n            resource: {\n              emp_id,\n              month_name,\n              is_billable\n            }\n          }).then(() => {\n            console.log(\"Create Done\");\n          }).catch(() => {\n            console.log(\"Create error\");\n          });\n        }\n      }\n    });\n    setChangesMade(false);\n    setChangedCellValues([]);\n  };\n  const handleDiscard = () => {\n    setChangesMade(false);\n    setChangedCellValues([]);\n    window.location.reload();\n  };\n  const handleCellEdit = (emp_id, month_name, is_billable) => {\n    handleCellValueChange(emp_id, month_name, is_billable);\n    setChangesMade(true);\n  };\n  const table = useMaterialReactTable({\n    columns,\n    data: combinedData,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      showColumnFilters: true,\n      columnPinning: {\n        left: ['id', 'emp_name']\n      }\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'cell',\n    enableBottomToolbar: false,\n    enableColumnResizing: true,\n    muiTableBodyCellProps: ({\n      cell\n    }) => ({\n      onBlur: () => {\n        const newValue = cell.getValue(); //yes or no\n        const rowId = cell.row.original.id; //emp_id\n        const columnId = cell.column.id; //month_name\n        handleCellEdit(rowId, columnId, newValue);\n      }\n    }),\n    renderTopToolbarCustomActions: () => /*#__PURE__*/React.createElement(React.Fragment, null, changesMade && /*#__PURE__*/React.createElement(Box, {\n      sx: {\n        display: \"flex\",\n        gap: \"5px\"\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      onClick: handleSave\n    }, \"Save\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"error\",\n      onClick: handleDiscard\n    }, \"Discard\")))\n  });\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: myTheme\n  }, /*#__PURE__*/React.createElement(MaterialReactTable, {\n    table: table\n  }));\n};\nexport default FetchEmployee;","map":{"version":3,"names":["React","useEffect","useState","MaterialReactTable","useMaterialReactTable","axios","Box","Button","Stack","ThemeProvider","createTheme","myTheme","palette","primary","main","monthNames","columns","accessorKey","header","size","enableColumnFilter","enableEditing","enableSorting","enableResizing","grow","forEach","month","push","toLowerCase","editVariant","editSelectOptions","filterVariant","filterSelectOptions","aggregationFn","Footer","createElement","FetchEmployee","employeeRefetch","setEmployeeRefetech","combinedData","setCombinedData","changesMade","setChangesMade","changedCellValues","setChangedCellValues","get","then","response","billing_data","employee_data","data","mergedData","mergeData","billingData","employeeData","employeeMap","employee","id","emp_name","Object","fromEntries","map","billing","emp_id","month_name","is_billable","values","handleCellValueChange","existingIndex","findIndex","item","newValues","prevValues","handleSave","patch","console","log","catch","post","resource","handleDiscard","window","location","reload","handleCellEdit","table","enableColumnPinning","enablePagination","initialState","showColumnFilters","columnPinning","left","enableFullScreenToggle","editDisplayMode","enableBottomToolbar","enableColumnResizing","muiTableBodyCellProps","cell","onBlur","newValue","getValue","rowId","row","original","columnId","column","renderTopToolbarCustomActions","Fragment","sx","display","gap","variant","onClick","color","theme"],"sources":["/home/softsuave/ROR Series/HTML/Project/Internal Project/ResourceManagement/app/javascript/resource-management/components/FetchEmployee/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\nimport { Box, Button, Stack, ThemeProvider, createTheme } from '@mui/material';\n\n\nconst myTheme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(103, 79, 192)',\n    },\n  },\n});\n\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'Id',\n    size: 100,\n    enableColumnFilter: false,\n    enableEditing: false,\n    enableSorting: false,\n    enableResizing: false,\n  },\n  {\n    accessorKey: 'emp_name',\n    header: 'Employee Name',\n    // size: 150,\n    enableResizing: true,\n    grow: true,\n    enableEditing: false,\n    enableColumnFilter: true,\n  },\n];\n\nmonthNames.forEach((month) => {\n  columns.push({\n    header: month,\n    accessorKey: month.toLowerCase(),\n    editVariant: \"select\",\n    editSelectOptions: [\"Yes\", \"No\"],\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true,\n    enableResizing: false,\n    filterVariant: \"select\",\n    filterSelectOptions: [\"Yes\", \"No\"],\n    aggregationFn: 'sum',\n    Footer: () => (\n      <Stack>\n        Total:\n        {/* <Box color=\"warning.main\">{Math.round(maxYes)}</Box> */}\n      </Stack>\n    ),\n  });\n});\n\nconst FetchEmployee = ({ employeeRefetch, setEmployeeRefetech }) => {\n  const [combinedData, setCombinedData] = useState([]);\n  const [changesMade, setChangesMade] = useState(false);\n  const [changedCellValues, setChangedCellValues] = useState([]);\n\n  useEffect(() => {\n    axios.get('api/fetchEmployeeBilling').then((response) => {\n      const { billing_data, employee_data } = response.data;\n      const mergedData = mergeData(billing_data, employee_data);\n      // console.log(mergedData)\n      setCombinedData(mergedData);\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n\n  const mergeData = (billingData, employeeData) => {\n    const employeeMap = {};\n    employeeData.forEach(employee => {\n      employeeMap[employee.id] = {\n        id: employee.id,\n        emp_name: employee.emp_name,\n        ...Object.fromEntries(monthNames.map(month => [month.toLowerCase(), ''])),\n      };\n    });\n\n    billingData.forEach(billing => {\n      const { emp_id, month_name, is_billable } = billing;\n      if (employeeMap[emp_id]) {\n        employeeMap[emp_id][month_name] = is_billable ? \"Yes\" : \"No\";\n      }\n    });\n\n    return Object.values(employeeMap);\n  };\n\n  const handleCellValueChange = (emp_id, month_name, is_billable) => {\n    const existingIndex = changedCellValues.findIndex(item => item.emp_id === emp_id && item.month_name === month_name);\n    if (existingIndex !== -1) {\n      const newValues = [...changedCellValues];\n      newValues[existingIndex].is_billable = is_billable;\n      setChangedCellValues(newValues);\n    } else {\n      setChangedCellValues(prevValues => [...prevValues, { emp_id, month_name, is_billable }]);\n    }\n    setChangesMade(true);\n  }\n\n  const handleSave = () => {\n    changedCellValues.forEach(({ emp_id, month_name, is_billable }) => {\n      const existingIndex = combinedData.findIndex(item => item.id == emp_id);\n      if (existingIndex !== -1) {\n        const employee = combinedData[existingIndex];\n        if (employee[month_name] !== '') {\n\n          axios.patch(\"api/editBillingInfo\", {\n            emp_id,\n            month_name,\n            is_billable\n          }).then(() => {\n            console.log(\"Edit Done\");\n          }).catch(() => {\n            console.log(\"Edit error\");\n          });\n        }\n        else {\n\n          axios.post(\"api/createBilling\", {\n            resource: {\n              emp_id,\n              month_name,\n              is_billable\n            }\n          }).then(() => {\n            console.log(\"Create Done\");\n          }).catch(() => {\n            console.log(\"Create error\");\n          });\n        }\n      }\n    });\n    setChangesMade(false);\n    setChangedCellValues([]);\n  }\n\n\n  const handleDiscard = () => {\n    setChangesMade(false);\n    setChangedCellValues([]);\n    window.location.reload();\n  }\n\n  const handleCellEdit = (emp_id, month_name, is_billable) => {\n    handleCellValueChange(emp_id, month_name, is_billable);\n    setChangesMade(true);\n  }\n\n  const table = useMaterialReactTable({\n    columns,\n    data: combinedData,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      showColumnFilters: true,\n      columnPinning: { left: ['id', 'emp_name'] },\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'cell',\n    enableBottomToolbar: false,\n    enableColumnResizing: true,\n    muiTableBodyCellProps: ({ cell }) => ({\n      onBlur: () => {\n        const newValue = cell.getValue();//yes or no\n        const rowId = cell.row.original.id;//emp_id\n        const columnId = cell.column.id;//month_name\n        handleCellEdit(rowId, columnId, newValue);\n      },\n    }),\n    renderTopToolbarCustomActions: () => (\n      <>\n        {changesMade && (\n          <Box sx={{ display: \"flex\", gap: \"5px\" }}>\n            <Button variant=\"contained\" onClick={handleSave} >Save</Button>\n            <Button variant='contained' color='error' onClick={handleDiscard}>Discard</Button>\n          </Box>\n        )}\n      </>\n    ),\n  });\n\n  return (\n    <ThemeProvider theme={myTheme}>\n      <MaterialReactTable table={table} />\n    </ThemeProvider>\n\n  );\n};\n\nexport default FetchEmployee;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}