{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst columns = [{\n  accessorKey: 'id',\n  header: 'Id',\n  size: 100,\n  enableColumnFilter: false,\n  enableEditing: false,\n  enableSorting: false\n}, {\n  accessorKey: 'emp_name',\n  header: 'Employee Name',\n  size: 150,\n  enableEditing: false,\n  enableColumnFilter: true\n}];\nmonthNames.forEach((month, index) => {\n  columns.push({\n    header: month,\n    footer: 'Total',\n    accessorKey: month.toLowerCase(),\n    // accessorKey: `month_name_${index}`,\n    // id: \"month_name\",\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true\n  });\n});\nconst FetchEmployee = ({\n  employeeRefetch,\n  setEmployeeRefetech\n}) => {\n  const [data, setData] = useState([]);\n  const [billingData, setBillingData] = useState([]);\n  useEffect(() => {\n    axios.get('api/fetchEmployeeBilling').then(response => {\n      setData(response.data);\n      console.log(response.data);\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n\n  // useEffect(() => {\n  //   axios.get('api/fetchBillingInfo')\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBillingData(response.data);\n  //     })\n  //     .catch(error => console.log(error))\n  // }, []);\n\n  const handleCellEdit = (emp_id, month_name, is_billable) => {\n    axios.post(\"api/createBilling\", {\n      emp_id,\n      month_name,\n      is_billable\n    }).then(() => {\n      console.log(\"Done\");\n    }).catch(() => console.log(\"Error\"));\n  };\n  const table = useMaterialReactTable({\n    columns,\n    data,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      columnPinning: {\n        left: ['id', 'emp_name']\n      }\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'table',\n    //cell\n    columnFilterDisplayMode: 'popover',\n    enableEditing: true,\n    muiTableBodyCellProps: ({\n      cell\n    }) => ({\n      onBlur: () => {\n        console.log(cell.getValue(), cell.row.original.id, cell.column.id);\n        handleCellEdit(cell.row.original.id, cell.column.id, cell.getValue());\n      }\n    })\n    // onEditingCellChange: handleCellEdit, \n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialReactTable, {\n    table: table\n  }));\n};\nexport default FetchEmployee;","map":{"version":3,"names":["React","useEffect","useState","MaterialReactTable","useMaterialReactTable","axios","monthNames","columns","accessorKey","header","size","enableColumnFilter","enableEditing","enableSorting","forEach","month","index","push","footer","toLowerCase","FetchEmployee","employeeRefetch","setEmployeeRefetech","data","setData","billingData","setBillingData","get","then","response","console","log","handleCellEdit","emp_id","month_name","is_billable","post","catch","table","enableColumnPinning","enablePagination","initialState","columnPinning","left","enableFullScreenToggle","editDisplayMode","columnFilterDisplayMode","muiTableBodyCellProps","cell","onBlur","getValue","row","original","id","column","createElement","Fragment"],"sources":["/home/softsuave/ROR Series/HTML/Project/Internal Project/ResourceManagement/app/javascript/resource-management/components/FetchEmployee/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\n\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'Id',\n    size: 100,\n    enableColumnFilter: false,\n    enableEditing: false,\n    enableSorting: false,\n  },\n  {\n    accessorKey: 'emp_name',\n    header: 'Employee Name',\n    size: 150,\n    enableEditing: false,\n    enableColumnFilter: true,\n  },\n];\n\nmonthNames.forEach((month, index) => {\n\n  columns.push({\n    header: month,\n    footer: 'Total',\n    accessorKey: month.toLowerCase(),\n    // accessorKey: `month_name_${index}`,\n    // id: \"month_name\",\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true,\n  });\n});\n\nconst FetchEmployee = ({ employeeRefetch, setEmployeeRefetech }) => {\n  const [data, setData] = useState([]);\n  const [billingData, setBillingData] = useState([]);\n\n  useEffect(() => {\n    axios.get('api/fetchEmployeeBilling').then((response) => {\n      setData(response.data);\n      console.log(response.data)\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n\n  // useEffect(() => {\n  //   axios.get('api/fetchBillingInfo')\n  //     .then((response) => {\n  //       console.log(response.data);\n  //       setBillingData(response.data);\n  //     })\n  //     .catch(error => console.log(error))\n  // }, []);\n\n  const handleCellEdit = (emp_id, month_name, is_billable) => {\n    axios.post(\"api/createBilling\", {\n      emp_id, month_name, is_billable\n    }).then(() => {\n      console.log(\"Done\")\n\n    }).catch(() => console.log(\"Error\"));\n  }\n\n\n\n  const table = useMaterialReactTable({\n    columns,\n    data,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      columnPinning: { left: ['id', 'emp_name'] },\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'table', //cell\n    columnFilterDisplayMode: 'popover',\n    enableEditing: true,\n    muiTableBodyCellProps: ({ cell }) => ({\n      onBlur: () => {\n        console.log(cell.getValue(), cell.row.original.id, cell.column.id);\n        handleCellEdit(cell.row.original.id, cell.column.id, cell.getValue())\n      },\n    }),\n    // onEditingCellChange: handleCellEdit, \n\n  });\n\n  return (\n    <>\n      <MaterialReactTable table={table} />\n    </>\n  );\n};\n\nexport default FetchEmployee;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}