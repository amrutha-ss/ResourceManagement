{"ast":null,"code":"import React, { useEffect, useState } from \"react\";\nimport { MaterialReactTable, useMaterialReactTable } from \"material-react-table\";\nimport axios from \"axios\";\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\n// const data = [\n//    {\n//       id: '1',\n//       employeeName: 'Amrutha A',\n//    },\n//    {\n//       id: '2',\n//       employeeName: ' A',\n//    },\n// ];\nconst columns = [{\n  accessorKey: \"id\",\n  header: \"Id\",\n  size: 100,\n  enableEditing: false,\n  enableColumnFilter: true,\n  filterFn: \"equals\",\n  filterVariant: \"text\"\n}, {\n  accessorKey: \"emp_name\",\n  header: \"Employee Name\",\n  size: 150,\n  enableEditing: false,\n  enableColumnFilter: true,\n  filterFn: \"equals\",\n  filterVariant: \"text\"\n}];\nmonthNames.forEach(month => {\n  columns.push({\n    header: month,\n    footer: \"Total\",\n    accessorKey: month.toLowerCase(),\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true,\n    filterFn: \"equals\",\n    filterVariant: \"select\",\n    filterSelectOptions: [\"Yes\", \"No\"]\n  });\n});\n\n// const data: never[] = [];\n\nconst MReactTable = () => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    // fetch('https://jsonplaceholder.typicode.com/users')\n    //    .then((response) => response.json())\n    //    .then((response) => {\n    //       setData(response);\n    //    });\n    axios.get(\"api/fetchEmployee\").then(response => {\n      setData(response.data);\n    });\n  }, []);\n  const table = useMaterialReactTable({\n    columns,\n    data,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      columnPinning: {\n        left: [\"id\", \"employeeName\"]\n      }\n    },\n    enableFullScreenToggle: false,\n    //   enableGrouping: true,\n    //   groupedColumnMode: 'remove',\n    enableEditing: true,\n    editDisplayMode: \"table\",\n    //cell\n    columnFilterDisplayMode: \"popover\"\n    // enableGlobalFilter: false,\n    // muiTableBodyRowProps: ({ row }) => ({\n    //     onClick: (event) => {\n    //         console.info(event, row.id);\n    //     },\n    //     sx: {\n    //         cursor: \"pointer\", //you might want to change the cursor too when adding an onClick\n    //     },\n    // }),\n    // muiEditTextFieldProps: ({ cell }) => ({\n    //     onBlur: (event) => {\n    //         console.info(event, cell.id);\n    //     },\n    // }),\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialReactTable, {\n    table: table\n  }));\n};\nexport default MReactTable;","map":{"version":3,"names":["React","useEffect","useState","MaterialReactTable","useMaterialReactTable","axios","monthNames","columns","accessorKey","header","size","enableEditing","enableColumnFilter","filterFn","filterVariant","forEach","month","push","footer","toLowerCase","filterSelectOptions","MReactTable","data","setData","get","then","response","table","enableColumnPinning","enablePagination","initialState","columnPinning","left","enableFullScreenToggle","editDisplayMode","columnFilterDisplayMode","createElement","Fragment"],"sources":["/home/softsuave/ROR Series/HTML/Project/Internal Project/ResourceManagement/app/javascript/resource-management/components/MaterialReactTable/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n    MaterialReactTable,\n    useMaterialReactTable,\n} from \"material-react-table\";\nimport axios from \"axios\";\n\nconst monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n];\n\n// const data = [\n//    {\n//       id: '1',\n//       employeeName: 'Amrutha A',\n//    },\n//    {\n//       id: '2',\n//       employeeName: ' A',\n//    },\n// ];\nconst columns = [\n    {\n        accessorKey: \"id\",\n        header: \"Id\",\n\n        size: 100,\n        enableEditing: false,\n        enableColumnFilter: true,\n        filterFn: \"equals\",\n        filterVariant: \"text\",\n    },\n    {\n        accessorKey: \"emp_name\",\n        header: \"Employee Name\",\n        size: 150,\n        enableEditing: false,\n        enableColumnFilter: true,\n        filterFn: \"equals\",\n        filterVariant: \"text\",\n    },\n];\n\nmonthNames.forEach((month) => {\n    columns.push({\n        header: month,\n        footer: \"Total\",\n        accessorKey: month.toLowerCase(),\n        size: 100,\n        enableEditing: true,\n        enableColumnFilter: true,\n        filterFn: \"equals\",\n        filterVariant: \"select\",\n        filterSelectOptions: [\"Yes\", \"No\"],\n    });\n});\n\n// const data: never[] = [];\n\nconst MReactTable = () => {\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n        // fetch('https://jsonplaceholder.typicode.com/users')\n        //    .then((response) => response.json())\n        //    .then((response) => {\n        //       setData(response);\n        //    });\n        axios.get(\"api/fetchEmployee\").then((response) => {\n            setData(response.data);\n        });\n    }, []);\n\n    const table = useMaterialReactTable({\n        columns,\n        data,\n        enableColumnPinning: true,\n        enablePagination: false,\n        initialState: {\n            columnPinning: { left: [\"id\", \"employeeName\"] },\n\n        },\n        enableFullScreenToggle: false,\n        //   enableGrouping: true,\n        //   groupedColumnMode: 'remove',\n        enableEditing: true,\n        editDisplayMode: \"table\", //cell\n        columnFilterDisplayMode: \"popover\",\n        // enableGlobalFilter: false,\n        // muiTableBodyRowProps: ({ row }) => ({\n        //     onClick: (event) => {\n        //         console.info(event, row.id);\n        //     },\n        //     sx: {\n        //         cursor: \"pointer\", //you might want to change the cursor too when adding an onClick\n        //     },\n        // }),\n        // muiEditTextFieldProps: ({ cell }) => ({\n        //     onBlur: (event) => {\n        //         console.info(event, cell.id);\n        //     },\n        // }),\n    });\n\n    return (\n        <>\n            <MaterialReactTable table={table} />\n        </>\n    );\n};\n\nexport default MReactTable;\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SACIC,kBAAkB,EAClBC,qBAAqB,QAClB,sBAAsB;AAC7B,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,UAAU,GAAG,CACf,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,EACL,KAAK,CACR;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,OAAO,GAAG,CACZ;EACIC,WAAW,EAAE,IAAI;EACjBC,MAAM,EAAE,IAAI;EAEZC,IAAI,EAAE,GAAG;EACTC,aAAa,EAAE,KAAK;EACpBC,kBAAkB,EAAE,IAAI;EACxBC,QAAQ,EAAE,QAAQ;EAClBC,aAAa,EAAE;AACnB,CAAC,EACD;EACIN,WAAW,EAAE,UAAU;EACvBC,MAAM,EAAE,eAAe;EACvBC,IAAI,EAAE,GAAG;EACTC,aAAa,EAAE,KAAK;EACpBC,kBAAkB,EAAE,IAAI;EACxBC,QAAQ,EAAE,QAAQ;EAClBC,aAAa,EAAE;AACnB,CAAC,CACJ;AAEDR,UAAU,CAACS,OAAO,CAAEC,KAAK,IAAK;EAC1BT,OAAO,CAACU,IAAI,CAAC;IACTR,MAAM,EAAEO,KAAK;IACbE,MAAM,EAAE,OAAO;IACfV,WAAW,EAAEQ,KAAK,CAACG,WAAW,CAAC,CAAC;IAChCT,IAAI,EAAE,GAAG;IACTC,aAAa,EAAE,IAAI;IACnBC,kBAAkB,EAAE,IAAI;IACxBC,QAAQ,EAAE,QAAQ;IAClBC,aAAa,EAAE,QAAQ;IACvBM,mBAAmB,EAAE,CAAC,KAAK,EAAE,IAAI;EACrC,CAAC,CAAC;AACN,CAAC,CAAC;;AAEF;;AAEA,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGrB,QAAQ,CAAC,EAAE,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACZ;IACA;IACA;IACA;IACA;IACAI,KAAK,CAACmB,GAAG,CAAC,mBAAmB,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;MAC9CH,OAAO,CAACG,QAAQ,CAACJ,IAAI,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,KAAK,GAAGvB,qBAAqB,CAAC;IAChCG,OAAO;IACPe,IAAI;IACJM,mBAAmB,EAAE,IAAI;IACzBC,gBAAgB,EAAE,KAAK;IACvBC,YAAY,EAAE;MACVC,aAAa,EAAE;QAAEC,IAAI,EAAE,CAAC,IAAI,EAAE,cAAc;MAAE;IAElD,CAAC;IACDC,sBAAsB,EAAE,KAAK;IAC7B;IACA;IACAtB,aAAa,EAAE,IAAI;IACnBuB,eAAe,EAAE,OAAO;IAAE;IAC1BC,uBAAuB,EAAE;IACzB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ,CAAC,CAAC;EAEF,oBACInC,KAAA,CAAAoC,aAAA,CAAApC,KAAA,CAAAqC,QAAA,qBACIrC,KAAA,CAAAoC,aAAA,CAACjC,kBAAkB;IAACwB,KAAK,EAAEA;EAAM,CAAE,CACrC,CAAC;AAEX,CAAC;AAED,eAAeN,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}