{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\nconst columns = [{\n  accessorKey: 'id',\n  header: 'Id',\n  size: 100,\n  enableColumnFilter: false,\n  enableEditing: false,\n  enableSorting: false\n}, {\n  accessorKey: 'emp_name',\n  header: 'Employee Name',\n  size: 150,\n  enableEditing: false,\n  enableColumnFilter: true\n}];\nmonthNames.forEach(month => {\n  columns.push({\n    header: month,\n    footer: 'Total',\n    accessorKey: month.toLowerCase(),\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true\n  });\n});\nconst FetchEmployee = ({\n  employeeRefetch,\n  setEmployeeRefetech\n}) => {\n  const [data, setData] = useState([]);\n  useEffect(() => {\n    axios.get('api/fetchEmployee').then(response => {\n      setData(response.data);\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n  const table = useMaterialReactTable({\n    columns,\n    data,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      columnPinning: {\n        left: ['id', 'emp_name']\n      }\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'table',\n    //cell\n    columnFilterDisplayMode: 'popover',\n    enableCellActions: true,\n    enableClickToCopy: 'context-menu',\n    enableEditing: true,\n    editDisplayMode: 'cell',\n    renderCellActionMenuItems: ({\n      closeMenu,\n      table,\n      internalMenuItems\n    }) => [...internalMenuItems, /*#__PURE__*/React.createElement(Divider, {\n      key: \"divider\"\n    }), /*#__PURE__*/React.createElement(MRT_ActionMenuItem, {\n      icon: /*#__PURE__*/React.createElement(EmailIcon, null),\n      key: 1,\n      label: \"Item 1\",\n      onClick: () => {\n        closeMenu();\n      },\n      table: table\n    }), /*#__PURE__*/React.createElement(MRT_ActionMenuItem, {\n      icon: /*#__PURE__*/React.createElement(PersonOffOutlinedIcon, null),\n      key: 2,\n      label: \"Item 2\",\n      onClick: () => {\n        closeMenu();\n      },\n      table: table\n    })]\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MaterialReactTable, {\n    table: table\n  }));\n};\nexport default FetchEmployee;","map":{"version":3,"names":["React","useEffect","useState","MaterialReactTable","useMaterialReactTable","axios","monthNames","columns","accessorKey","header","size","enableColumnFilter","enableEditing","enableSorting","forEach","month","push","footer","toLowerCase","FetchEmployee","employeeRefetch","setEmployeeRefetech","data","setData","get","then","response","table","enableColumnPinning","enablePagination","initialState","columnPinning","left","enableFullScreenToggle","editDisplayMode","columnFilterDisplayMode","enableCellActions","enableClickToCopy","renderCellActionMenuItems","closeMenu","internalMenuItems","createElement","Divider","key","MRT_ActionMenuItem","icon","EmailIcon","label","onClick","PersonOffOutlinedIcon","Fragment"],"sources":["/home/softsuave/ROR Series/HTML/Project/Internal Project/ResourceManagement/app/javascript/resource-management/components/FetchEmployee/index.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MaterialReactTable, useMaterialReactTable } from 'material-react-table';\nimport axios from 'axios';\n\nconst monthNames = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n\nconst columns = [\n  {\n    accessorKey: 'id',\n    header: 'Id',\n    size: 100,\n    enableColumnFilter: false,\n    enableEditing: false,\n    enableSorting: false,\n  },\n  {\n    accessorKey: 'emp_name',\n    header: 'Employee Name',\n    size: 150,\n    enableEditing: false,\n    enableColumnFilter: true,\n  },\n];\n\nmonthNames.forEach((month) => {\n  columns.push({\n    header: month,\n    footer: 'Total',\n    accessorKey: month.toLowerCase(),\n    size: 100,\n    enableEditing: true,\n    enableColumnFilter: true,\n  });\n});\n\nconst FetchEmployee = ({ employeeRefetch, setEmployeeRefetech }) => {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    axios.get('api/fetchEmployee').then((response) => {\n      setData(response.data);\n      setEmployeeRefetech(false);\n    });\n  }, [employeeRefetch]);\n\n  const table = useMaterialReactTable({\n    columns,\n    data,\n    enableColumnPinning: true,\n    enablePagination: false,\n    initialState: {\n      columnPinning: { left: ['id', 'emp_name'] },\n    },\n    enableFullScreenToggle: false,\n    enableEditing: true,\n    editDisplayMode: 'table', //cell\n    columnFilterDisplayMode: 'popover',\n    enableCellActions: true,\n    enableClickToCopy: 'context-menu',\n    enableEditing: true,\n    editDisplayMode: 'cell',\n    renderCellActionMenuItems: ({ closeMenu, table, internalMenuItems }) => [\n      ...internalMenuItems,\n      <Divider key=\"divider\" />,\n      <MRT_ActionMenuItem\n        icon={<EmailIcon />}\n        key={1}\n        label=\"Item 1\"\n        onClick={() => {\n          closeMenu();\n        }}\n        table={table}\n      />,\n      <MRT_ActionMenuItem\n        icon={<PersonOffOutlinedIcon />}\n        key={2}\n        label=\"Item 2\"\n        onClick={() => {\n          closeMenu();\n        }}\n        table={table}\n      />,\n    ],\n  });\n\n  return (\n    <>\n      <MaterialReactTable table={table} />\n    </>\n  );\n};\n\nexport default FetchEmployee;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}