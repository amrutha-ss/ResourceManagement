{"ast":null,"code":"import React, { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, TextField, Snackbar, createTheme, ThemeProvider, Alert } from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport axios from 'axios';\nconst myTheme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(103, 79, 192)'\n    },\n    text: {\n      primary: 'rgb(103, 79, 192)'\n    }\n  }\n});\nconst useStyles = makeStyles({\n  createButtonStyles: {\n    height: '40px',\n    width: '200px',\n    fontWeight: '700 !important',\n    fontFamily: 'Avenir Next !important'\n  },\n  dailogContent: {\n    paddingBottom: '15px'\n  },\n  textFieldStyles: {\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'rgb(103, 79, 192)'\n      },\n      '&:hover fieldset': {\n        borderColor: 'rgb(103, 79, 192)'\n      }\n    }\n  }\n});\nfunction CreateEmployee({\n  setEmployeeRefetch\n}) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [employeeName, setEmployeeName] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n    setEmployeeName('');\n  };\n  const handleAddEmployee = async () => {\n    const data = {\n      emp_name: employeeName\n    };\n    await axios.post('/api/createEmployee', data).then(() => {\n      setSnackbarMessage('Employee created successfully');\n      setSnackbarOpen(true);\n      setEmployeeRefetch(true);\n      setSnackbarSeverity('success');\n    }).catch(() => {\n      setSnackbarMessage('Failed to add employee.');\n      setSnackbarOpen(true);\n      setSnackbarSeverity('error');\n    }).finally(() => {\n      handleClose();\n    });\n  };\n  const handleInputChange = event => {\n    setEmployeeName(event.target.value);\n  };\n  const handleSnackbarClose = reason => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: myTheme\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.createButtonStyles,\n    onClick: handleClickOpen,\n    variant: \"contained\"\n  }, \"Create Employee\"), /*#__PURE__*/React.createElement(Dialog, {\n    open: open\n  }, /*#__PURE__*/React.createElement(DialogTitle, null, \"Add Employee\"), /*#__PURE__*/React.createElement(DialogContent, null, /*#__PURE__*/React.createElement(DialogContentText, {\n    className: classes.dailogContent\n  }, \"Please enter the name of the employee:\"), /*#__PURE__*/React.createElement(TextField, {\n    className: classes.textFieldStyles,\n    label: \"Employee Name\",\n    type: \"text\",\n    fullWidth: true,\n    value: employeeName,\n    onChange: handleInputChange\n  })), /*#__PURE__*/React.createElement(DialogActions, null, /*#__PURE__*/React.createElement(Button, {\n    onClick: handleClose\n  }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: handleAddEmployee,\n    variant: \"contained\"\n  }, \"Add\"))), /*#__PURE__*/React.createElement(Snackbar, {\n    open: snackbarOpen,\n    autoHideDuration: 4000,\n    onClose: handleSnackbarClose\n  }, /*#__PURE__*/React.createElement(Alert, {\n    onClose: handleSnackbarClose,\n    severity: snackbarSeverity,\n    variant: \"filled\",\n    sx: {\n      width: '100%'\n    }\n  }, snackbarMessage)));\n}\nexport default CreateEmployee;","map":{"version":3,"names":["React","useState","Button","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","TextField","Snackbar","createTheme","ThemeProvider","Alert","makeStyles","axios","myTheme","palette","primary","main","text","useStyles","createButtonStyles","height","width","fontWeight","fontFamily","dailogContent","paddingBottom","textFieldStyles","borderColor","CreateEmployee","setEmployeeRefetch","classes","open","setOpen","employeeName","setEmployeeName","snackbarOpen","setSnackbarOpen","snackbarMessage","setSnackbarMessage","snackbarSeverity","setSnackbarSeverity","handleClickOpen","handleClose","handleAddEmployee","data","emp_name","post","then","catch","finally","handleInputChange","event","target","value","handleSnackbarClose","reason","createElement","theme","className","onClick","variant","label","type","fullWidth","onChange","autoHideDuration","onClose","severity","sx"],"sources":["/home/softsuave/ROR Series/HTML/Project/ResourceManagement/app/javascript/resource-management/components/CreateEmployee/index.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  TextField,\n  Snackbar,\n  createTheme,\n  ThemeProvider,\n  Alert,\n} from '@mui/material';\nimport { makeStyles } from '@mui/styles';\nimport axios from 'axios';\n\nconst myTheme = createTheme({\n  palette: {\n    primary: {\n      main: 'rgb(103, 79, 192)',\n    },\n    text: {\n      primary: 'rgb(103, 79, 192)',\n    },\n  },\n});\n\nconst useStyles = makeStyles({\n  createButtonStyles: {\n    height: '40px',\n    width: '200px',\n    fontWeight: '700 !important',\n    fontFamily: 'Avenir Next !important',\n  },\n  dailogContent: {\n    paddingBottom: '15px',\n  },\n  textFieldStyles: {\n    '& .MuiOutlinedInput-root': {\n      '& fieldset': {\n        borderColor: 'rgb(103, 79, 192)',\n      },\n      '&:hover fieldset': {\n        borderColor: 'rgb(103, 79, 192)',\n      },\n    },\n  },\n});\n\nfunction CreateEmployee({ setEmployeeRefetch }) {\n  const classes = useStyles();\n\n  const [open, setOpen] = useState(false);\n  const [employeeName, setEmployeeName] = useState('');\n  const [snackbarOpen, setSnackbarOpen] = useState(false);\n  const [snackbarMessage, setSnackbarMessage] = useState('');\n  const [snackbarSeverity, setSnackbarSeverity] = useState('success');\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setEmployeeName('');\n  };\n\n  const handleAddEmployee = async () => {\n    const data = { emp_name: employeeName };\n\n    await axios\n      .post('/api/createEmployee', data)\n      .then(() => {\n        setSnackbarMessage('Employee created successfully');\n        setSnackbarOpen(true);\n        setEmployeeRefetch(true);\n        setSnackbarSeverity('success');\n      })\n      .catch(() => {\n        setSnackbarMessage('Failed to add employee.');\n        setSnackbarOpen(true);\n        setSnackbarSeverity('error');\n      })\n      .finally(() => {\n        handleClose();\n      });\n  };\n\n  const handleInputChange = (event) => {\n    setEmployeeName(event.target.value);\n  };\n  const handleSnackbarClose = (reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n    setSnackbarOpen(false);\n  };\n\n  return (\n    <ThemeProvider theme={myTheme}>\n      <Button className={classes.createButtonStyles} onClick={handleClickOpen} variant=\"contained\">\n        Create Employee\n      </Button>\n      <Dialog open={open}>\n        <DialogTitle>Add Employee</DialogTitle>\n        <DialogContent>\n          <DialogContentText className={classes.dailogContent}>\n            Please enter the name of the employee:\n          </DialogContentText>\n          <TextField\n            className={classes.textFieldStyles}\n            label=\"Employee Name\"\n            type=\"text\"\n            fullWidth\n            value={employeeName}\n            onChange={handleInputChange}\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose}>Cancel</Button>\n          <Button onClick={handleAddEmployee} variant=\"contained\">\n            Add\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Snackbar open={snackbarOpen} autoHideDuration={4000} onClose={handleSnackbarClose}>\n        <Alert onClose={handleSnackbarClose} severity={snackbarSeverity} variant=\"filled\" sx={{ width: '100%' }}>\n          {snackbarMessage}\n        </Alert>\n      </Snackbar>\n    </ThemeProvider>\n  );\n}\n\nexport default CreateEmployee;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}